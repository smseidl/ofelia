name: Docker Push
on:
  release:
    types:
      - created
  push:
    branches:
      - master
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        if: ${{ !env.ACT }}
        uses: actions/cache@v2.1.4
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.service }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.service }}
            ${{ runner.os }}-buildx-

      - name: Prepare version number
        id: prepare
        run: |
          VERSION=$(git describe --always --tags)
          if [ "${{ github.event_name }}" = "release" ]; then
            TAGS="mcuadros/ofelia:$VERSION,mcuadros/ofelia:latest"
            # Replace with below once @mcuadros adds the DOCKER_USERNAME secret
            #TAGS="${{secrets.DOCKER_USERNAME}}/ofelia:$VERSION,${{secrets.DOCKER_USERNAME}}/ofelia:latest"
          else
            TAGS="mcuadros/ofelia:$VERSION,mcuadros/ofelia:development"
            # Replace with below once @mcuadros adds the DOCKER_USERNAME secret
            #TAGS="${{secrets.DOCKER_USERNAME}}/ofelia:$VERSION,${{secrets.DOCKER_USERNAME}}/ofelia:development"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: mcuadros
          # Replace with below once @mcuadros adds the DOCKER_USERNAME secret
          # username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
     
      - name: Build the Docker image and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
          build-args: |
            VERSION=${{ steps.prepare.outputs.version }}
            BUILD_DATE=${{ steps.prepare.outputs.created }}
            GIT_REF=${{ github.sha }}
          labels: |
            org.opencontainers.image.title=${{ matrix.service }}
            org.opencontainers.image.description=Ofelia - a job scheduler
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prepare.outputs.version }}
            org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache

